FROM carml/base:amd64-gpu-latest
LABEL maintainer="pearson@illinois.edu"

# Install mxnet
ENV MXNET_CUDNN_AUTOTUNE_DEFAULT=0
ENV MXNET_SRC=/mxnet
ENV MXNET_ROOT=/opt/frameworks/mxnet
WORKDIR /
RUN git clone --single-branch --depth 1 --branch v0.11.0 --recursive https://github.com/apache/incubator-mxnet "$MXNET_SRC"

RUN cd "$MXNET_SRC" && \
  mkdir -p "$MXNET_ROOT" &&  \
  cp make/config.mk . && \
  echo "USE_BLAS=openblas" >>config.mk && \
  echo "USE_OPENCV=0" >>config.mk && \
  echo "ADD_CFLAGS=-I/usr/include/openblas -Wno-strict-aliasing -Wno-sign-compare -ftrack-macro-expansion=0 -Wno-misleading-indentation" >>config.mk && \
  echo "USE_CUDA=1" >>config.mk && \
  echo "USE_CUDA_PATH=/usr/local/cuda" >>config.mk && \
  echo "USE_CUDNN=1" >>config.mk && \
  echo "NVCCFLAGS=-lineinfo" >>config.mk && \
  nice -n20 make -j`nproc` ADD_LDFLAGS=-L/usr/local/cuda/lib64/stubs PREFIX=/opt/frameworks/mxnet &&  \
  cp -r include "$MXNET_ROOT" && \
  cp -r lib "$MXNET_ROOT" && \
  rm -r build

RUN ln -s "$MXNET_ROOT/lib/libmxnet.so" /usr/lib/libmxnet.so
ENV LD_LIBRARY_PATH /usr/local/cuda/lib64:$LD_LIBRARY_PATH
ENV LD_LIBRARY_PATH "$MXNET_ROOT/lib":$LD_LIBRARY_PATH
ENV LIBRARY_PATH "$MXNET_ROOT/lib":$LIBRARY_PATH

# Install PIP
RUN apt-get update && apt-get install -y \
    python-pip \
    time \
    && rm -rf /var/lib/apt/lists/*
RUN pip install --upgrade pip

# Install MXNet python bindings, then remove so only prereqs remain
RUN pip install --user -e $MXNET_ROOT/python \
    && pip uninstall -y mxnet

# Add Dataset
ENV DATA_ROOT="/fashion-mnist"
RUN wget -qS -P "$DATA_ROOT" \
    http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-images-idx3-ubyte.gz \
    http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/train-labels-idx1-ubyte.gz \
    http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-images-idx3-ubyte.gz \
    http://fashion-mnist.s3-website.eu-central-1.amazonaws.com/t10k-labels-idx1-ubyte.gz

# Add saved models to docker image
ENV MODELS_DIR="/models"
COPY models ${MODELS_DIR}

# Add evaluation scripts to docker image
ENV  SCRIPTS_DIR="/eval-scripts"
COPY scripts ${SCRIPTS_DIR}

# Add support source code to docker image
ENV ECE408_SRC_DIR="/ece408-src"
COPY ece408-src ${ECE408_SRC_DIR}